name: Update Stats JSON (Reddit & Discord)

on:
  schedule:
    - cron: "0 */4 * * *" # Runs daily at midnight UTC
  workflow_dispatch: {} # Allows manual triggering

permissions:
  contents: write

jobs:
  update-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Fetch Reddit Data
        id: reddit
        run: |
          echo "Fetching Reddit data from Cloudflare Worker..."
          RESPONSE=$(curl -s "https://reddit-fetcher.patres-inferni.workers.dev/")
          echo "Raw Reddit response:"
          echo "$RESPONSE"
          # Extract the subscriber count from the JSON response.
          SUBSCRIBERS=$(echo "$RESPONSE" | jq '.data.subscribers')
          ACTIVE_USER_COUNT=$(echo "$RESPONSE" | jq '.data.active_user_count')
          echo "subscribers=$SUBSCRIBERS" >> $GITHUB_OUTPUT
          echo "active_user_count=$ACTIVE_USER_COUNT" >> $GITHUB_OUTPUT

      - name: Fetch Discord Data
        id: discord
        run: |
          echo "Fetching Discord data..."
          DISCORD_RESPONSE=$(curl -s "https://discord.com/api/invites/Vhqn7YXnF4?with_counts=true&with_expiration=true")
          echo "Raw Discord response:"
          echo "$DISCORD_RESPONSE"
          # Extract member count and presence count.
          MEMBER_COUNT=$(echo "$DISCORD_RESPONSE" | jq '.approximate_member_count')
          PRESENCE_COUNT=$(echo "$DISCORD_RESPONSE" | jq '.approximate_presence_count')
          echo "members=$MEMBER_COUNT" >> $GITHUB_OUTPUT
          echo "presence=$PRESENCE_COUNT" >> $GITHUB_OUTPUT

      - name: Update stats.json file
        run: |
          echo '{' > stats.json
          echo '  "reddit": { "subscribers": '"${{ steps.reddit.outputs.subscribers }}"', "active_user_count": '"${{ steps.reddit.outputs.active_user_count }}"' },' >> stats.json
          echo '  "discord": { "approximate_member_count": '"${{ steps.discord.outputs.members }}"', "approximate_presence_count": '"${{ steps.discord.outputs.presence }}"' },' >> stats.json
          echo '  "lastUpdated": "'"$(date --utc +'%Y-%m-%dT%H:%M:%SZ')"'"' >> stats.json
          echo '}' >> stats.json

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add stats.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update community stats"
            git push
          fi
