name: Update Stats JSON (Reddit, Discord, TikTok, YouTube)

on:
  schedule:
    - cron: "0 */4 * * *" # Runs daily at midnight UTC
  workflow_dispatch: {} # Allows manual triggering

permissions:
  contents: write

jobs:
  update-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Fetch Reddit Data
        id: reddit
        run: |
          echo "Fetching Reddit data from Cloudflare Worker..."
          RESPONSE=$(curl -s "https://reddit-fetcher.patres-inferni.workers.dev/")
          echo "Raw Reddit response:"
          echo "$RESPONSE"
          # Extract the subscriber count from the JSON response.
          SUBSCRIBERS=$(echo "$RESPONSE" | jq '.data.subscribers')
          echo "subscribers=$SUBSCRIBERS" >> $GITHUB_OUTPUT

      - name: Fetch Discord Data
        id: discord
        run: |
          echo "Fetching Discord data..."
          DISCORD_RESPONSE=$(curl -s "https://discord.com/api/invites/helldads?with_counts=true&with_expiration=true")
          echo "Raw Discord response:"
          echo "$DISCORD_RESPONSE"
          # Extract member count and presence count.
          MEMBER_COUNT=$(echo "$DISCORD_RESPONSE" | jq '.approximate_member_count')
          PRESENCE_COUNT=$(echo "$DISCORD_RESPONSE" | jq '.approximate_presence_count')
          echo "members=$MEMBER_COUNT" >> $GITHUB_OUTPUT
          echo "presence=$PRESENCE_COUNT" >> $GITHUB_OUTPUT

      - name: Fetch TikTok Data
        id: tiktok
        run: |
          echo "Fetching TikTok page..."
          TIKTOK_RESPONSE=$(curl -s "https://www.tiktok.com/@helldads")
          echo "Raw Tiktok response:"
          echo "$TIKTOK_RESPONSE"

          echo "Extracting stats JSON..."
          STATS_JSON=$(echo "$TIKTOK_RESPONSE" | grep -oP '"stats":\s*{\K[^}]+(?=})' | head -n1)
          STATS_JSON="{\"stats\":{$STATS_JSON}}"

          echo "Raw extracted stats:"
          echo "$STATS_JSON" | jq

          FOLLOWER_COUNT=$(echo "$STATS_JSON" | jq '.stats.followerCount')
          VIDEO_COUNT=$(echo "$STATS_JSON" | jq '.stats.videoCount')
          echo "follower_count=$FOLLOWER_COUNT" >> $GITHUB_OUTPUT
          echo "video_count=$VIDEO_COUNT" >> $GITHUB_OUTPUT

      - name: Fetch YouTube Data
        id: youtube
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }} # Replace with your YouTube channel ID
        run: |
          echo "Fetching YouTube data..."
          # YouTube API call to get channel stats
          RESPONSE=$(curl -s "https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${YOUTUBE_CHANNEL_ID}&key=${YOUTUBE_API_KEY}")
          echo "Raw YouTube response:"
          echo "$RESPONSE"
          # Extract subscriber count and video count
          SUBSCRIBER_COUNT=$(echo "$RESPONSE" | jq '.items[0].statistics.subscriberCount')
          VIDEO_COUNT=$(echo "$RESPONSE" | jq '.items[0].statistics.videoCount')
          echo "youtube_subscriber_count=$SUBSCRIBER_COUNT" >> $GITHUB_OUTPUT
          echo "youtube_video_count=$VIDEO_COUNT" >> $GITHUB_OUTPUT

      - name: Load stats.json and process values
        id: load_and_process
        run: |

          # Validate and set new values or fallback to existing ones
          if [ -z "${{ steps.reddit.outputs.subscribers }}" ]; then
            REDDIT_SUBSCRIBERS=$(jq -r '.reddit.subscribers' stats.json)
          else
            REDDIT_SUBSCRIBERS="${{ steps.reddit.outputs.subscribers }}"
          fi
          if [ -z "${{ steps.discord.outputs.members }}" ]; then
            DISCORD_MEMBERS=$(jq -r '.discord.approximate_member_count' stats.json)
          else
            DISCORD_MEMBERS="${{ steps.discord.outputs.members }}"
          fi
          if [ -z "${{ steps.discord.outputs.presence }}" ]; then
            DISCORD_PRESENCE=$(jq -r '.discord.approximate_presence_count' stats.json)
          else
            DISCORD_PRESENCE="${{ steps.discord.outputs.presence }}"
          fi

          if [ -z "${{ steps.tiktok.outputs.follower_count }}" ]; then
            TIKTOK_FOLLOWER_COUNT=$(jq -r '.tiktok.follower_count' stats.json)
          else
            TIKTOK_FOLLOWER_COUNT="${{ steps.tiktok.outputs.follower_count }}"
          fi
          if [ -z "${{ steps.tiktok.outputs.video_count }}" ]; then
            TIKTOK_VIDEO_COUNT=$(jq -r '.tiktok.video_count' stats.json)
          else
            TIKTOK_VIDEO_COUNT="${{ steps.tiktok.outputs.video_count }}"
          fi
          if [ -z "${{ steps.youtube.outputs.youtube_subscriber_count }}" ]; then
            YOUTUBE_SUBSCRIBER_COUNT=$(jq -r '.youtube.subscriber_count' stats.json)
          else
            YOUTUBE_SUBSCRIBER_COUNT="${{ steps.youtube.outputs.youtube_subscriber_count }}"
          fi
          if [ -z "${{ steps.youtube.outputs.youtube_video_count }}" ]; then
            YOUTUBE_VIDEO_COUNT=$(jq -r '.youtube.video_count' stats.json)
          else
            YOUTUBE_VIDEO_COUNT="${{ steps.youtube.outputs.youtube_video_count }}"
          fi

          # Write the updated stats.json file with fallback values
          echo '{' > stats.json
          echo '  "reddit": { "subscribers": '"$REDDIT_SUBSCRIBERS"' },' >> stats.json
          echo '  "discord": { "approximate_member_count": '"$DISCORD_MEMBERS"', "approximate_presence_count": '"$DISCORD_PRESENCE"' },' >> stats.json
          echo '  "tiktok": { "follower_count": '"$TIKTOK_FOLLOWER_COUNT"', "video_count": '"$TIKTOK_VIDEO_COUNT"' },' >> stats.json
          echo '  "youtube": { "subscriber_count": '"$YOUTUBE_SUBSCRIBER_COUNT"', "video_count": '"$YOUTUBE_VIDEO_COUNT"' },' >> stats.json
          echo '  "lastUpdated": "'"$(date --utc +'%Y-%m-%dT%H:%M:%SZ')"'"' >> stats.json
          echo '}' >> stats.json

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add stats.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update community stats"
            git push
          fi
